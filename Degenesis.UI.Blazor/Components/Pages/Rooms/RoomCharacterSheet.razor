@if (Character is null)
{
    <MudText Color="Color.Error">Loading Character data.</MudText>
    <MudProgressCircular Color="Color.Primary" Size="Size.Large" Indeterminate="true" />
}
else
{
    <MudPaper Elevation="0" Class="pa-1">
        <MudPaper Class="pa-1" Outlined Elevation="0">
            <MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Start">
                <MudStack>
                    <MudText Typo="Typo.h6"><b>Name</b>: @Character.Name</MudText>
                    <MudStack Row>
                        <MudText Typo="Typo.h6"><b>Rank:</b> @Character.Rank?.Name</MudText>
                        <MudButton Variant="Variant.Outlined" Size="Size.Small" OnClick="OpenEditRankDialog">
                            Change rank
                        </MudButton>
                    </MudStack>
                </MudStack>
                <MudStack>
                    <MudText Typo="Typo.h6"><b>Age</b>: @Character.Age years</MudText>
                    <MudStack Row>
                        <MudText Typo="Typo.h6"><b>XP:</b> </MudText>
                        <MudItem Style="width:25%">
                            <MudNumericField HideSpinButtons @bind-Value="@Character.Experience"
                                             Immediate="true"
                                             TextUpdateSuppression="false"
                                             OnBlur="UpdateXp" />
                        </MudItem>
                    </MudStack>
                </MudStack>
                <MudStack Style="width:16%">
                    <MudText Typo="Typo.h6"><b>Height</b>: @Character.Height cms</MudText>
                    <MudStack Row>
                        <MudText Typo="Typo.h6"><b>Money (Draft/Dinar)</b>: </MudText>
                        <MudItem Style="width:15%">
                            <MudNumericField HideSpinButtons @bind-Value="@Character.ChroniclerMoney"
                                             Immediate="true"
                                             TextUpdateSuppression="false"
                                             OnBlur="UpdateChroniclerMoney" />
                            
                        </MudItem>
                        <MudText Typo="Typo.h6">/</MudText>
                        <MudItem Style="width:15%">
                            <MudNumericField HideSpinButtons @bind-Value="@Character.DinarMoney"
                                             Immediate="true"
                                             TextUpdateSuppression="false"
                                             OnBlur="UpdateDinar" />
                        </MudItem>
                    </MudStack>
                    
                </MudStack>

                <MudText Typo="Typo.h6"><b>Weight</b>: @Character.Weight kgs</MudText>
                <MudText Typo="Typo.h6"><b>Sex</b>: @Character.Sex</MudText>
                @if (Character.IsFocusOriented)
                {
                    <MudText Typo="Typo.h6"><b>Orientation:</b> Focus</MudText>
                }
                else
                {
                    <MudText Typo="Typo.h6"><b>Orientation:</b> Primal</MudText>
                }
                <MudButton Variant="Variant.Outlined" Size="Size.Small" OnClick="OpenEditInfosDialog">
                    Edit infos
                </MudButton>
            </MudStack>
            <MudStack Row>

            </MudStack>
        </MudPaper>

        <MudPaper Elevation="0" Class="my-4">
            <MudStack Justify="Justify.SpaceEvenly" Row="true">
                <MudStack AlignItems="AlignItems.Center">
                    <MudText Typo="Typo.h6">Cult</MudText>
                    <MudText Typo="Typo.h6">@Character.Cult?.Name</MudText>
                </MudStack>
                <MudStack AlignItems="AlignItems.Center">
                    <MudText Typo="Typo.h6">Culture</MudText>
                    <MudText Typo="Typo.h6">@Character.Culture?.Name</MudText>
                </MudStack>
                <MudStack AlignItems="AlignItems.Center">
                    <MudText Typo="Typo.h6">Concept</MudText>
                    <MudText Typo="Typo.h6">@Character.Concept?.Name</MudText>
                </MudStack>
            </MudStack>
        </MudPaper>

        <MudPaper Elevation="0" Class="my-4">
            <MudStack Wrap="Wrap.Wrap" Row AlignItems="AlignItems.Center" Justify="@Justify.SpaceAround">
                @{
                    int rowMaxElement = 3;
                    int rowElementNb = 0;
                }
                @foreach (var attr in Character.Attributes)
                {
                    <MudPaper Class="pa-1" Width="32%" Outlined="true">
                        <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                            <MudText Typo="Typo.h6">@attr.Name</MudText>
                            <MudStack Row AlignItems="AlignItems.Center" Spacing="1">
                                <MudIconButton Icon="@Icons.Material.Filled.Remove"
                                               Disabled="@(@attr.Level <= 0)"
                                               OnClick="() => ChangeAttributeLevel(attr, -1)"
                                               Size="Size.Small"
                                               Color="Color.Error" />

                                <MudRating SelectedValue="@attr.Level"
                                           MaxValue="6"
                                           ReadOnly="true"
                                           FullIcon="@Icons.Material.Filled.Square"
                                           EmptyIcon="@Icons.Material.Outlined.Square"
                                           FullIconColor="Color.Error"
                                           EmptyIconColor="Color.Error"
                                           Size="Size.Small" />

                                <MudIconButton Icon="@Icons.Material.Filled.Add"
                                               Disabled="@(@attr.Level >= 6)"
                                               OnClick="() => ChangeAttributeLevel(attr, 1)"
                                               Size="Size.Small"
                                               Color="Color.Success" />
                            </MudStack>
                        </MudStack>

                        <MudDivider/>

                        @foreach (var skill in Character.Skills.Where(s => s.AttributeId == attr.AttributeId))
                        {
                            <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                                <MudText Typo="Typo.h6">@skill.Name</MudText>
                                <MudStack Row AlignItems="AlignItems.Center" Spacing="1">
                                    @if (!IsSkillDisabled(skill))
                                    {
                                        <MudIconButton Icon="@Icons.Material.Filled.Remove"
                                                       Disabled="@(skill.Level <= 0)"
                                                       OnClick="() => ChangeSkillLevel(skill, -1)"
                                                       Size="Size.Small"
                                                       Color="Color.Error" />
                                        <MudRating SelectedValue="@skill.Level"
                                                   MaxValue="6"
                                                   ReadOnly="true"
                                                   FullIcon="@Icons.Material.Filled.Square"
                                                   EmptyIcon="@Icons.Material.Outlined.Square"
                                                   FullIconColor="Color.Error"
                                                   EmptyIconColor="Color.Error"
                                                   Size="Size.Small" />

                                        <MudIconButton Icon="@Icons.Material.Filled.Add"
                                                       Disabled="@(@skill.Level >= 6)"
                                                       OnClick="() => ChangeSkillLevel(skill, 1)"
                                                       Size="Size.Small"
                                                       Color="Color.Success" />
                                    }
                                    else
                                    {
                                        <MudIconButton Icon="@Icons.Material.Filled.Remove"
                                                       Disabled
                                                       Size="Size.Small"/>
                                        <MudRating SelectedValue="@skill.Level"
                                                   MaxValue="6"
                                                   Disabled
                                                   FullIcon="@Icons.Material.Filled.Square"
                                                   EmptyIcon="@Icons.Material.Outlined.Square"
                                                   FullIconColor="Color.Error"
                                                   EmptyIconColor="Color.Error"
                                                   Size="Size.Small" />
                                        <MudIconButton Icon="@Icons.Material.Filled.Add"
                                                       Disabled
                                                       Size="Size.Small" />
                                    }
                                </MudStack>
                            </MudStack>
                        }
                    </MudPaper>
                    rowElementNb++;
                    if (rowElementNb == rowMaxElement)
                    {
                        <MudFlexBreak />
                        rowElementNb = 0;
                    }
                }
            </MudStack>
        </MudPaper>

        <MudPaper Elevation="0" Class="my-4">
            <MudStack Row Justify="Justify.SpaceBetween">
                <MudPaper Elevation="0" Width="80%">

                    <MudText Align="Align.Center" Typo="Typo.h5">Backgrounds</MudText>

                    <MudTable Items="@Character.Backgrounds"
                              Dense="true"
                              Hover="false"
                              Bordered="false"
                              Striped="false"
                              Elevation="0"
                              Breakpoint="Breakpoint.None">

                        <RowTemplate>
                            <MudTd>
                                <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                                    <MudText Typo="Typo.h6">@context.Name</MudText>
                                    <MudRating SelectedValue="@context.Level"
                                               SelectedValueChanged="@(newValue => UpdateBackgroundLevel(context, newValue))"
                                               FullIcon="@Icons.Material.Filled.Square"
                                               EmptyIcon="@Icons.Material.Outlined.Square"
                                               FullIconColor="Color.Error"
                                               EmptyIconColor="Color.Error"
                                               Size="Size.Small" />
                                </MudStack>
                            </MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudPaper>


                <MudPaper Elevation="0" Width="80%">
                    <MudStack>
                        <MudStack AlignItems="AlignItems.Center">
                            <MudText Typo="Typo.h6">Ego</MudText>
                            <MudRating SelectedValue="@Character.Ego"
                                       SelectedValueChanged="UpdateEgo"
                                       MaxValue="@Character.MaxEgo"
                                       FullIcon="@Icons.Material.Filled.Square"
                                       EmptyIcon="@Icons.Material.Outlined.Square"
                                       FullIconColor="Color.Error"
                                       EmptyIconColor="Color.Error" />
                        </MudStack>
                        <MudStack AlignItems="AlignItems.Center">
                            <MudText Typo="Typo.h6">Spore Infestation</MudText>
                            <MudRating SelectedValue="@Character.CurrentSporeInfestation"
                                       SelectedValueChanged="UpdateCurrentSporeInfestation"
                                       MaxValue="@Character.MaxSporeInfestation"
                                       FullIcon="@Icons.Material.Filled.Square"
                                       EmptyIcon="@Icons.Material.Outlined.Square"
                                       FullIconColor="Color.Error"
                                       EmptyIconColor="Color.Error" />
                            <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.Center">
                                <MudText Align="Align.Center">Permanent Infestation : </MudText>
                                <MudItem Style="width:20%">
                                    <MudNumericField HideSpinButtons @bind-Value="@Character.PermanentSporeInfestation" 
                                                                    Immediate="true"
                                                                    TextUpdateSuppression="false"
                                                                    OnBlur="UpdatePermanentSporeInfestation" />
                                </MudItem>
                            </MudStack>
                        </MudStack>
                        <MudStack AlignItems="AlignItems.Center">
                            <MudText Typo="Typo.h6">Fleshwounds</MudText>
                            <MudRating SelectedValue="@Character.FleshWounds"
                                       SelectedValueChanged="UpdateFleshWounds"
                                       MaxValue="@Character.MaxFleshWounds"
                                       FullIcon="@Icons.Material.Filled.Square"
                                       EmptyIcon="@Icons.Material.Outlined.Square"
                                       FullIconColor="Color.Error"
                                       EmptyIconColor="Color.Error" />
                        </MudStack>
                        <MudStack AlignItems="AlignItems.Center">
                            <MudText Typo="Typo.h6">Traumas</MudText>
                            <MudRating SelectedValue="@Character.Trauma"
                                       SelectedValueChanged="UpdateTrauma"
                                       MaxValue="@Character.MaxTrauma"
                                       FullIcon="@Icons.Material.Filled.Square"
                                       EmptyIcon="@Icons.Material.Outlined.Square"
                                       FullIconColor="Color.Error"
                                       EmptyIconColor="Color.Error" />
                        </MudStack>
                    </MudStack>
                </MudPaper>

                <MudPaper Elevation="0" Width="80%">

                    <MudText Align="Align.Center" Typo="Typo.h5">Potentials</MudText>

                    <MudTable Items="@Character.Potentials"
                              Dense="true"
                              Hover="false"
                              Bordered="false"
                              Striped="false"
                              Elevation="0"
                              Breakpoint="Breakpoint.None">

                        <ToolBarContent>
                            <MudButton Variant="Variant.Outlined" Size="Size.Small" OnClick="OpenAddPotentialDialog">
                                Add a potential
                            </MudButton>
                        </ToolBarContent>

                        <RowTemplate>
                            <MudTd>
                                <MudStack Row AlignItems="AlignItems.Center" Justify="Justify.SpaceBetween">
                                    <MudTooltip Placement="Placement.Right">
                                        <ChildContent>
                                            <MudText Typo="Typo.h6">@context.Name</MudText>
                                        </ChildContent>
                                        <TooltipContent>
                                            <MudText Align="Align.Left" Typo="Typo.h6">
                                               <MudText>@context.Description</MudText>
                                            </MudText>
                                        </TooltipContent>
                                    </MudTooltip>


                                    <MudStack Row AlignItems="AlignItems.Center" Spacing="1">
                                        <MudStack Row AlignItems="AlignItems.Center" Spacing="1">
                                            <MudIconButton Icon="@Icons.Material.Filled.Remove"
                                                           Disabled="@(@context.Level <= 0)"
                                                           OnClick="() => ChangeBackgroundLevel(context, -1)"
                                                           Size="Size.Small"
                                                           Color="Color.Error" />

                                            <MudRating @bind-SelectedValue="@context.Level"
                                                       FullIcon="@Icons.Material.Filled.Square"
                                                       EmptyIcon="@Icons.Material.Outlined.Square"
                                                       FullIconColor="Color.Error"
                                                       EmptyIconColor="Color.Error"
                                                       Size="Size.Small" />

                                            <MudIconButton Icon="@Icons.Material.Filled.Add"
                                                           Disabled="@(@context.Level >= 6)"
                                                           OnClick="() => ChangeBackgroundLevel(context, 1)"
                                                           Size="Size.Small"
                                                           Color="Color.Success" />

                                            <MudButton Variant="Variant.Outlined"
                                                       Size="Size.Small"
                                                       OnClick="() => DeleteCharacterPotential(context.PotentialId)">
                                                Delete
                                            </MudButton>
                                        </MudStack>
                                    </MudStack>
                                </MudStack>
                            </MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudPaper>
            </MudStack>
        </MudPaper>
    </MudPaper>
}